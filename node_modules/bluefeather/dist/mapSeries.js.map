{"version":3,"sources":["../src/mapSeries.js"],"names":["mapSeries","values","mapper","mappedValues","index","value","push"],"mappings":";;;;;;;AAMA,MAAMA,SAA8B,GAAG,OAAOC,MAAP,EAAeC,MAAf,KAA0B;AAC/D,QAAMC,YAAY,GAAG,EAArB;AAEA,MAAIC,KAAK,GAAG,CAAC,CAAb;;AAEA,OAAK,MAAMC,KAAX,IAAoBJ,MAApB,EAA4B;AAC1BE,IAAAA,YAAY,CAACG,IAAb,EAAkB,MAAMJ,MAAM,CAACG,KAAD,EAAQ,EAAED,KAAV,EAAiBH,MAAjB,CAA9B;AACD;;AAED,SAAOE,YAAP;AACD,CAVD;;eAYeH,S","sourcesContent":["// @flow\n\ntype CallbackType<T, R> = (currentValue: T, index: number, values: $ReadOnlyArray<T>) => R;\n\ntype MapSeriesType<T, R> = (values: $ReadOnlyArray<T>, mapper: CallbackType<T, R>) => Promise<$ReadOnlyArray<R>>;\n\nconst mapSeries: MapSeriesType<*, *> = async (values, mapper) => {\n  const mappedValues = [];\n\n  let index = -1;\n\n  for (const value of values) {\n    mappedValues.push(await mapper(value, ++index, values));\n  }\n\n  return mappedValues;\n};\n\nexport default mapSeries;\n"],"file":"mapSeries.js"}