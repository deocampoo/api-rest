"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* eslint-disable flowtype/no-weak-types */

/**
 * @property context Invokes `nodeFunction` using `context` as the calling object.
 * @property multipleArguments Makes the resulting promise fulfill with an array of the callback's success value(s).
 */

/**
 * Creates a function that when executed returns a promise whose fait depends
 * on the callback provided as the last parameter to the wrapped function.
 */
const promisify = (nodeFunction, options = {}) => {
  const multipleArguments = typeof options.multipleArguments === 'boolean' ? options.multipleArguments : false;
  return (...args) => {
    return new Promise((resolve, reject) => {
      const callback = (error, ...results) => {
        if (error) {
          reject(error);
          return;
        }

        if (multipleArguments) {
          resolve(results);
          return;
        }

        resolve(results[0]);
      };

      nodeFunction(...args.concat([callback]));
    });
  };
};

var _default = promisify;
exports.default = _default;
//# sourceMappingURL=promisify.js.map