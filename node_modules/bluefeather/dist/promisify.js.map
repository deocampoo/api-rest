{"version":3,"sources":["../src/promisify.js"],"names":["promisify","nodeFunction","options","multipleArguments","args","Promise","resolve","reject","callback","error","results","concat"],"mappings":";;;;;;;AAEA;;AAEA;;;;;AAUA;;;;AAIA,MAAMA,SAAwB,GAAG,CAACC,YAAD,EAAeC,OAAO,GAAG,EAAzB,KAAgC;AAC/D,QAAMC,iBAAiB,GAAG,OAAOD,OAAO,CAACC,iBAAf,KAAqC,SAArC,GAAiDD,OAAO,CAACC,iBAAzD,GAA6E,KAAvG;AAEA,SAAO,CAAC,GAAGC,IAAJ,KAAgD;AACrD,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQ,GAAGC,OAAX,KAAuB;AACtC,YAAID,KAAJ,EAAW;AACTF,UAAAA,MAAM,CAACE,KAAD,CAAN;AAEA;AACD;;AAED,YAAIN,iBAAJ,EAAuB;AACrBG,UAAAA,OAAO,CAACI,OAAD,CAAP;AAEA;AACD;;AAEDJ,QAAAA,OAAO,CAACI,OAAO,CAAC,CAAD,CAAR,CAAP;AACD,OAdD;;AAgBAT,MAAAA,YAAY,CACV,GAAGG,IAAI,CAACO,MAAL,CAAY,CAACH,QAAD,CAAZ,CADO,CAAZ;AAGD,KApBM,CAAP;AAqBD,GAtBD;AAuBD,CA1BD;;eA4BeR,S","sourcesContent":["// @flow\n\n/* eslint-disable flowtype/no-weak-types */\n\n/**\n * @property context Invokes `nodeFunction` using `context` as the calling object.\n * @property multipleArguments Makes the resulting promise fulfill with an array of the callback's success value(s).\n */\ntype PromisifyOptionsType = {|\n  multipleArguments?: boolean\n|};\n\ntype PromisifyType = (nodeFunction: Function, options?: PromisifyOptionsType) => Function;\n\n/**\n * Creates a function that when executed returns a promise whose fait depends\n * on the callback provided as the last parameter to the wrapped function.\n */\nconst promisify: PromisifyType = (nodeFunction, options = {}) => {\n  const multipleArguments = typeof options.multipleArguments === 'boolean' ? options.multipleArguments : false;\n\n  return (...args: $ReadOnlyArray<any>): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      const callback = (error, ...results) => {\n        if (error) {\n          reject(error);\n\n          return;\n        }\n\n        if (multipleArguments) {\n          resolve(results);\n\n          return;\n        }\n\n        resolve(results[0]);\n      };\n\n      nodeFunction(\n        ...args.concat([callback])\n      );\n    });\n  };\n};\n\nexport default promisify;\n"],"file":"promisify.js"}